<?php

/**
 * Implements hook_menu() .
 */
function cruisetypes_menu() {

    //Cruise Types Table List View
    $items['cruisetypes'] = array(
        'title' => 'Cruise Types',
        'page callback' => 'cruisetypes_list_view',
        'access arguments' => array('view cruisetypes entity'),
    );

    //Adding New
    $items['cruisetypes/add'] = array(
        'title' => 'Add Cruise Types',
        'page callback' => 'cruisetypes_add',
        'access arguments' => array('create cruisetypes entities'),
        'file' => 'cruisetypes.form.inc',
    );

    //Edit Cruise Types
    $items['cruisetypes/%cruisetypes/edit'] = array(
        'title' => 'Edit',
        'load arguments' => array('cruisetypes'),
        'type' => MENU_LOCAL_TASK,
        'page callback' => 'cruisetypes_item_edit',
        'access arguments' => array('edit cruisetypes entities'),
        'page arguments' => array(1),
        'file' => 'cruisetypes.form.inc',
    );

    //Delete Cruise Types
    $items['cruisetypes/%/delete'] = array(
        'page callback' => 'cruisetypes_item_delete',
        'access arguments' => array('delete cruisetypes entities'),
        'page arguments' => array(1),
        'file' => 'cruisetypes.form.inc',
    );

    //Manage Cruise Types through Admin Panel
    $items['admin/structure/cruisetypes/manage'] = array(
        'title' => 'Cruise Types',
        'description' => 'Manage Cruise Types',
        'page callback' => 'cruisetypes_admin_page',
        'access arguments' => array('administer cruisetypes entities'),
    );
    return $items;
}

/**
 * Implements hook_permission().
 */
function cruisetypes_permission() {
    return array(
        'administer cruisetypes entities' => array(
            'title' => t('Administer cruisetypes entities'),
            'restrict access' => TRUE,
        ),
        'view cruisetypes entities' => array(
            'title' => t('View cruisetypes Entities'),
        ),
        'create cruisetypes entities' => array(
            'title' => t('Create cruisetypes Entities'),
        ),
    	'edit cruisetypes entities' => array(
    			'title' => t('Edit cruisetypes Entities'),
    	),
        'delete cruisetypes entities' => array(
            'title' => t('Delete cruisetypes Entities'),
        ),
    );
}

/**
 * Implements hook_entity_info().
 */
function cruisetypes_entity_info() {
    $cruisetypes_info['cruisetypes'] = array(
        'label' => 'Cruise Types',
        'controller class' => 'CruisetypesController',
        'base table' => 'cruisetypes',
        'uri callback' => 'cruisetypes_uri',
        'fieldable' => TRUE,
        'entity keys' => array(
            'id' => 'id',
        ),
        'static cache' => TRUE,
        'bundles' => array(
            'cruisetypes_bundle' => array(
                'label' => 'cruisetypes',
                'admin' => array(
                    'path' => 'admin/structure/cruisetypes/manage',
                    'access arguments' => array('administer cruisetypes entities'),
                ),
            ),
        ),
        'view modes' => array(
            'full' => array(
                'label' => t('Full'),
                'custom settings' => FALSE,
            ),
        )
    );
    return $cruisetypes_info;
}

function cruisetypes_page_title($cruisetypes) {
    return 'Cruise Types';
}

function cruisetypes_load($id = NULL, $reset = FALSE) {
    $ids = (isset($id) ? array($id) : array());
    $cruisetypes = cruisetypes_load_multiple($ids, array(), $reset);
    return $cruisetypes ? reset($cruisetypes) : FALSE;
}

function cruisetypes_load_multiple($ids = array(), $conditions = array(), $reset = FALSE) {
    return entity_load('cruisetypes', $ids, $conditions, $reset);
}

function cruisetypes_uri($cruisetypes) {
    return array(
        'path' => 'cruisetypes/' . $cruisetypes->id,
    );
}

function cruisetypes_item_delete($id) {
	$msg = '';
	
	//check existence in cruises
	$result=cruise_load_multiple($ids = array(), $conditions = array('cruise_type' => $id));
	
	if($result){
		$msg = 'Delete operation failed. Current Cruise Type already used in cruises.';
		//return drupal_get_form('cruisetypes_delete_confirm',$id);
	}else{
		try {
			cruisetypes_delete($id);
			$msg = 'Cruise Types Deleted Successfully.';
		} catch (Exception $e) {
			$msg = 'Deletion Failed.';
		}
		
	}
	
	drupal_set_message($msg);
	drupal_goto('admin/structure/cruisetypes/manage');
}



function cruisetypes_delete_confirm($form, &$form_state,$id) {

	$form['type_id'] = array('#type' => 'value', '#value' => $id);
	$form['#submit'] = array('cruisetypes_delete_confirm_submit');
	return confirm_form($form,
			t('<h6>Current Cruise Type already used in cruises. Are you sure want to delete this type?'),
			'admin/structure/cruisetypes/manage</h6>',
			NULL,
			t('Delete'));
}




function cruisetypes_delete_confirm_submit($form, &$form_state) {
	$msg = '';
	$id = $form_state ['values'] ['type_id'];
	try {
		cruisetypes_delete ( $id );
		$msg = 'Cruise Type Deleted Successfully.';
	} catch ( Exception $e ) {
		$msg = 'Deletion Failed.';
	}
	drupal_set_message ( $msg );
	drupal_goto ( 'admin/structure/cruisetypes/manage' );
}




function cruisetypes_admin_page() {
//$output = 'Admin page for cruisetypes entities.<br/>';
    $output = '';
    $output .= '<a href="' . base_path() . 'cruisetypes/add">Add Cruise Type</a>';

    $output.=cruisetypes_list_view();

    return $output;
}

function cruisetypes_page_view($entity, $view_mode = 'tweaky') {

    // var_dump($entity);
    $entity_type = 'cruisetypes';
    $entity->content = array(
        '#view_mode' => $view_mode,
    );

    field_attach_prepare_view($entity_type, array($entity->id => $entity), $view_mode);
    entity_prepare_view($entity_type, array($entity->id => $entity));
    $entity->content += field_attach_view($entity_type, $entity, $view_mode);
    $entity->content['id'] = array(
        '#type' => 'item',
        '#title' => t('id'),
        '#markup' => $entity->id,
    );

    $entity->content['name'] = array(
        '#type' => 'item',
        '#title' => t('Name'),
        '#value' => $entity->name,
    );
    
 
    
    
    global $language;
    $langcode = $language->language;
    module_invoke_all('entity_view', $entity, $entity_type, $view_mode, $langcode);
   // drupal_alter(array('userdocuments_view', 'entity_view'), $entity->content, $entity_type);
    return $entity->content;
}

function cruisetypes_item_edit($cruisetypes) {
    drupal_set_title(t('<em>Edit Cruise Types </em> @title', array('@title' =>
        '')), PASS_THROUGH);
    return drupal_get_form('cruisetypes_add_form', $cruisetypes);
}



function cruisetypes_field_extra_fields() {
    $form_elements['id'] = array(
        'label' => t('Auto ID'),
        'description' => t('Text'),
        'weight' => -5,
    );
    
    $display_elements['id'] = array(
        'label' => t('Auto ID'),
        'description' => t('Text'),
        'weight' => -5,
    );

    $form_elements['name'] = array(
        'label' => t('Name'),
        'description' => t('Text'),
        'weight' => -5,
    );

    $display_elements['name'] = array(
        'label' => t('Name'),
        'description' => t('Text'),
        'weight' => -5,
    );
    


// Since we have only one bundle type, we'll just provide the extra_fields
// for it here.
    $extra_fields['cruisetypes']['cruisetypes_bundle']['form'] = $form_elements;
    $extra_fields['cruisetypes']['cruisetypes_bundle']['display'] = $display_elements;
    return $extra_fields;
}



function cruisetypes_save(&$cruisetypes) {
    return entity_get_controller('cruisetypes')->save($cruisetypes);
}

function cruisetypes_delete($id) {
    return entity_get_controller('cruisetypes')->delete($id);
}






function cruisetypes_list_view() {
    $output = '';
    $header = array(
        array('data' => 'Id', 'field' => 'id'),
        array('data' => 'Name', 'field' => 'name'),
        array('data' => 'Actions'),
    );
    if (isset($_GET['sort']) && isset($_GET['order'])) {
        if ($_GET['sort'] == 'asc')
            $sort = 'ASC';
        else
            $sort = 'DESC';

        switch ($_GET['order']) {
            case 'Id':
                $order = 'id';
                break;
            case 'Name':
                $order = 'name';
                break;
        }
    } else {
        $sort = 'ASC';
        $order = 'id';
    }


    $query = db_select("cruisetypes", "n");
    $query->fields('n', array('id', 'name'));
    $query->orderBy($order, $sort);
    $query = $query->extend('TableSort')->extend('PagerDefault')->limit(10);
    $result = $query->execute()->fetchAll();

    //var_dump($result[0]->name);
    //exit();

    global $base_url;
    $rows = array();
    if (count($result) > 0) {
        for ($i = 0; $i < count($result); $i++) {
            $rows[] = array(
                $result[$i]->id,
                $result[$i]->name,
                          
                '<a href="' . $base_url . '/cruisetypes/' . $result[$i]->id . '/edit">Edit |</a>
                <a href="' . $base_url . '/cruisetypes/' . $result[$i]->id . '/delete">Delete</a>'
            );
        }
    }

    $output .= '<div class="">';
    $output .= '<div class="">';

    $output .= '</div>';
    $output .= theme_table(
                    array(
                        'header' => $header,
                        'rows' => $rows,
                        'attributes' => array('class' => array('')),
                        'sticky' => true,
                        'caption' => '',
                        'colgroups' => array(),
                        'empty' => t("No Records!"),
                    )
            ) . theme('pager');

    $output .= '</div>';

    return $output;
}




/**
 * Cruise types list
 * 
 * 
 */
function getcruisetypelist()
{
	$query = db_select("cruisetypes", "n");
	$query->fields('n', array('id', 'name'));
	
	$result = $query->execute()->fetchAll();
	
	$resultset=array();
	foreach ($result as $cruisentity)
	{
		$resultset[$cruisentity->id]=$cruisentity->name;
	}
	
	drupal_json_output($resultset);exit();
}




