<?php
/**
 * @file
 * Install for a basic entity - need to create the base table for our entity.
 * This table can have as many columns as you need to keep track of
 * entity-specific data that will not be added via attached fields.
 * The minimum information for the entity to work is an id and an entity name.
 */

/**
 * Implements hook_schema().
 *
 * @ingroup entity_example
 */
function corporategiving_schema() {
  $schema = array();

  // The name of the table can be any name we choose. However, namespacing the
  // table with the module name is best practice.
  $schema['corporategiving'] = array(
    'description' => 'The base table for our corporategiving entity.',
      'fields' => array(
        'id' => array(
          'description' => 'Primary key of the corporategiving entity.',
          'type' => 'serial',
          'unsigned' => TRUE,
          'not null' => TRUE,
        ),
        // If we allow multiple bundles, then the schema must handle that;
        // We'll put it in the 'bundle_type' field to avoid confusion with the
        // entity type.
        'type' => array(
          'description' => 'The bundle type',
          'type' => 'varchar',
         'length' => 255,
              'not null' => TRUE,
              'default' => '',
        ),
        // Additional properties are just things that are common to all
        // entities and don't require field storage.
        'organising_requsting_donation' => array(
          'description' => 'A description of the organising requsting donation',
          'type' => 'varchar',
          'length' => 255,
          'not null' => TRUE,
          'default' => '',
        ),
           'date_event' => array(
          'description' => 'A description of the date event',
          'type' => 'varchar',
          'length' => 255,
          'not null' => TRUE,
          'default' => '',
        ),
           'description_event' => array(
          'description' => 'A description of description_event',
          'type' => 'varchar',
          'length' => 255,
          'not null' => TRUE,
          'default' => '',
        ),
          'goal_event' => array(
          'description' => 'A description of the goal of event',
          'type' => 'varchar',
          'length' => 255,
          'not null' => TRUE,
          'default' => '',
        ),
           'first_name' => array(
          'description' => 'A description of the first name',
          'type' => 'varchar',
          'length' => 255,
          'not null' => TRUE,
          'default' => '',
        ),
          'last_name' => array(
          'description' => 'A description of the last name',
          'type' => 'varchar',
          'length' => 255,
          'not null' => TRUE,
          'default' => '',
        ),
          'address1' => array(
          'description' => 'A description of address1',
          'type' => 'varchar',
          'length' => 255,
          'not null' => TRUE,
          'default' => '',
        ),
           'address2' => array(
          'description' => 'A description of the address2',
          'type' => 'varchar',
          'length' => 255,
          'not null' => TRUE,
          'default' => '',
        ),
            'city' => array(
          'description' => 'A description of city',
          'type' => 'varchar',
          'length' => 255,
          'not null' => TRUE,
          'default' => '',
        ),
           'state' => array(
          'description' => 'A description of state',
          'type' => 'varchar',
          'length' => 255,
          'not null' => TRUE,
          'default' => '',
        ),
          'zipcode' => array(
          'description' => 'A description of the item zipcode',
          'type' => 'varchar',
          'length' => 255,
          'not null' => TRUE,
          'default' => '',
        ),
           'phone_number' => array(
          'description' => 'A description of the item phone number',
          'type' => 'varchar',
          'length' => 255,
          'not null' => TRUE,
          'default' => '',
        ),
            'mail' => array(
          'description' => 'A description of the item mail',
          'type' => 'varchar',
          'length' => 255,
          'not null' => TRUE,
          'default' => '',
        ),
            'confirmmail' => array(
          'description' => 'A description of the item confirm mail',
          'type' => 'varchar',
          'length' => 255,
          'not null' => TRUE,
          'default' => '',
        ),
            'captcha' => array(
          'description' => 'A description of the item captcha',
          'type' => 'varchar',
          'length' => 255,
          'not null' => TRUE,
          'default' => '',
        ),
            'captcha_confirm' => array(
          'description' => 'A description of the item captcha confirm',
          'type' => 'varchar',
          'length' => 255,
          'not null' => TRUE,
          'default' => '',
        ),
        'created' => array(
          'description' => 'The Unix timestamp of the entity creation time.',
          'type' => 'int',
          'not null' => TRUE,
          'default' => 0,
        ),
      ),
    'primary key' => array('id'),
  );

  return $schema;
}


/*
 * Implements hook_uninstall().
 *
 * At uninstall time we'll notify field.module that the entity was deleted
 * so that attached fields can be cleaned up.
 *
 * @ingroup entity_example
 */

