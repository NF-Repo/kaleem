<?php

/**
 * Implements hook_menu().
 */
function ticketorders_menu() {

    //Ticket Orders Table List View
    $items['ticketorders'] = array(
        'title' => 'Ticket Orders',
        'page callback' => 'ticketorders_list_view',
        'access arguments' => array('view ticketorders entity'),
    );

    //Adding New
    $items['ticketorders/add'] = array(
        'title' => 'Add Ticket Orders',
        'page callback' => 'ticketorders_add',
        'access arguments' => array('create ticketorders entities'),
        'file' => 'ticketorders.form.inc',
    );

    //Edit Ticket Orders
    $items['ticketorders/%ticketorders/edit'] = array(
        'title' => 'Edit',
        'load arguments' => array('ticketorders'),
        'type' => MENU_LOCAL_TASK,
        'page callback' => 'ticketorders_item_edit',
        'access arguments' => array('edit ticketorders entities'),
        'page arguments' => array(1),
        'file' => 'ticketorders.form.inc',
    );

    //Delete Ticket Orders
    $items['ticketorders/%/delete'] = array(
        'page callback' => 'ticketorders_item_delete',
        'access arguments' => array('delete ticketorders entities'),
        'page arguments' => array(1),
        'file' => 'ticketorders.form.inc',
    );

    //Manage Ticket Orders through Admin Panel
    $items['admin/structure/ticketorders/manage'] = array(
        'title' => 'Ticket Orders',
        'description' => 'Manage Ticket Orders',
        'page callback' => 'ticketorders_admin_page',
        'access arguments' => array('administer ticketorders entities'),
    );
    return $items;
}

/**
 * Implements hook_permission().
 */
function ticketorders_permission() {
    return array(
        'administer ticketorders entities' => array(
            'title' => t('Administer ticketorders entities'),
            'restrict access' => TRUE,
        ),
        'view ticketorders entities' => array(
            'title' => t('View ticketorders Entities'),
        ),
        'create ticketorders entities' => array(
            'title' => t('Create ticketorders Entities'),
        ),
        'delete ticketorders entities' => array(
            'title' => t('Delete ticketorders Entities'),
        ),
    );
}

/**
 * Implements hook_entity_info().
 */
function ticketorders_entity_info() {
    $ticketorders_info['ticketorders'] = array(
        'label' => 'Ticket Orders',
        'controller class' => 'TicketOrdersController',
        'base table' => 'ticketorders',
        'uri callback' => 'ticketorders_uri',
        'fieldable' => TRUE,
        'entity keys' => array(
            'id' => 'id',
        ),
        'static cache' => TRUE,
        'bundles' => array(
            'ticketorders_bundle' => array(
                'label' => 'ticketorders',
                'admin' => array(
                    'path' => 'admin/structure/ticketorders/manage',
                    'access arguments' => array('administer ticketorders entities'),
                ),
            ),
        ),
        'view modes' => array(
            'full' => array(
                'label' => t('Full'),
                'custom settings' => FALSE,
            ),
        )
    );
    return $ticketorders_info;
}

function ticketorders_page_title($ticketorders) {
    return 'Ticket Orders';
}

function ticketorders_load($id = NULL, $reset = FALSE) {
    $ids = (isset($id) ? array($id) : array());
    $ticketorders = ticketorders_load_multiple($ids, array(), $reset);
    return $ticketorders ? reset($ticketorders) : FALSE;
}

function ticketorders_load_multiple($ids = array(), $conditions = array(), $reset = FALSE) {
    return entity_load('ticketorders', $ids, $conditions, $reset);
}

function ticketorders_uri($ticketorders) {
    return array(
        'path' => 'ticketorders/' . $ticketorders->id,
    );
}

function ticketorders_item_delete($id) {
    $msg = '';
    try {
        ticketorders_delete($id);
        $msg = 'Ticket Orders Deleted Successfully.';
    } catch (Exception $e) {
        $msg = 'Operation Failed.';
    }
    drupal_set_message($msg);
    drupal_goto('admin/structure/ticketorders/manage');
}

function ticketorders_admin_page() {
//$output = 'Admin page for ticketorders entities.<br/>';
    $output = '';
    $output .= '<a href="' . base_path() . 'ticketorders/add">Add Ticket Order</a>';

    $output.=ticketorders_list_view();

    return $output;
}

function ticketorders_page_view($entity, $view_mode = 'tweaky') {

    // var_dump($entity);
    $entity_type = 'ticketorders';
    $entity->content = array(
        '#view_mode' => $view_mode,
    );

    field_attach_prepare_view($entity_type, array($entity->id => $entity), $view_mode);
    entity_prepare_view($entity_type, array($entity->id => $entity));
    $entity->content += field_attach_view($entity_type, $entity, $view_mode);
    $entity->content['id'] = array(
        '#type' => 'item',
        '#title' => t('id'),
        '#markup' => $entity->id,
    );

    $entity->content['ticket_id'] = array(
        '#type' => 'item',
        '#title' => t('Ticket ID'),
        '#value' => $entity->ticket_id,
    );
    
    $entity->content['order_id'] = array(
        '#type' => 'item',
        '#title' => t('Order ID'),
        '#value' => $entity->order_id,
    );
    
    $entity->content['ticket_qty'] = array(
        '#type' => 'item',
        '#title' => t('Ticket Quantity'),
        '#value' => $entity->ticket_qty,
    );
    
    
    global $language;
    $langcode = $language->language;
    module_invoke_all('entity_view', $entity, $entity_type, $view_mode, $langcode);
   // drupal_alter(array('userdocuments_view', 'entity_view'), $entity->content, $entity_type);
    return $entity->content;
}

function ticketorders_item_edit($ticketorders) {
    drupal_set_title(t('<em>Edit Ticket Orders </em> @title', array('@title' =>
        '')), PASS_THROUGH);
    return drupal_get_form('ticketorders_add_form', $ticketorders);
}



function ticketorders_field_extra_fields() {
    $form_elements['id'] = array(
        'label' => t('Auto ID'),
        'description' => t('Text'),
        'weight' => -5,
    );
    
    $display_elements['id'] = array(
        'label' => t('Auto ID'),
        'description' => t('Text'),
        'weight' => -5,
    );

    $form_elements['ticket_id'] = array(
        'label' => t('Ticket ID'),
        'description' => t('Text'),
        'weight' => -5,
    );

    $display_elements['ticket_id'] = array(
        'label' => t('Ticket ID'),
        'description' => t('Text'),
        'weight' => -5,
    );
    $form_elements['order_id'] = array(
        'label' => t('Order ID'),
        'description' => t('Text'),
        'weight' => -5,
    );

    $display_elements['order_id'] = array(
        'label' => t('Order ID'),
        'description' => t('Text'),
        'weight' => -5,
    );
    
    $form_elements['ticket_qty'] = array(
        'label' => t('Ticket Quantity'),
        'description' => t('Text'),
        'weight' => -5,
    );

    $display_elements['ticket_qty'] = array(
        'label' => t('Ticket Quantity'),
        'description' => t('Text'),
        'weight' => -5,
    );


// Since we have only one bundle type, we'll just provide the extra_fields
// for it here.
    $extra_fields['ticketorders']['ticketorders_bundle']['form'] = $form_elements;
    $extra_fields['ticketorders']['ticketorders_bundle']['display'] = $display_elements;
    return $extra_fields;
}



function ticketorders_save(&$ticketorders) {
    return entity_get_controller('ticketorders')->save($ticketorders);
}

function ticketorders_delete($id) {
    return entity_get_controller('ticketorders')->delete($id);
}






function ticketorders_list_view() {
    $output = '';
    $header = array(
        array('data' => 'Id', 'field' => 'id'),
        array('data' => 'Ticket ID', 'field' => 'ticket_id'),
        array('data' => 'Order ID'),
        array('data' => 'Ticket Quantity'),
        array('data' => 'Actions'),
    );
    if (isset($_GET['sort']) && isset($_GET['order'])) {
        if ($_GET['sort'] == 'asc')
            $sort = 'ASC';
        else
            $sort = 'DESC';

        switch ($_GET['order']) {
            case 'Id':
                $order = 'id';
                break;
            case 'Ticket ID':
                $order = 'ticket_id';
                break;
        }
    } else {
        $sort = 'ASC';
        $order = 'id';
    }


    $query = db_select("ticketorders", "n");
    $query->fields('n', array('id', 'ticket_id', 'order_id', 'ticket_qty'));
    $query->orderBy($order, $sort);
    $query = $query->extend('TableSort')->extend('PagerDefault')->limit(5);
    $result = $query->execute()->fetchAll();

    //var_dump($result[0]->ticket_id);
    //exit();

    global $base_url;
    $rows = array();
    if (count($result) > 0) {
        for ($i = 0; $i < count($result); $i++) {
            $rows[] = array(
                $result[$i]->id,
                $result[$i]->ticket_id,
                $result[$i]->order_id,
                $result[$i]->ticket_qty,
             
                '<a href="' . $base_url . '/ticketorders/' . $result[$i]->id . '/edit">Edit |</a>
                <a href="' . $base_url . '/ticketorders/' . $result[$i]->id . '/delete">Delete</a>'
            );
        }
    }

    $output .= '<div class="">';
    $output .= '<div class="">';

    $output .= '</div>';
    $output .= theme_table(
                    array(
                        'header' => $header,
                        'rows' => $rows,
                        'attributes' => array('class' => array('')),
                        'sticky' => true,
                        'caption' => '',
                        'colgroups' => array(),
                        'empty' => t("No Records!"),
                    )
            ) . theme('pager');

    $output .= '</div>';

    return $output;
}
