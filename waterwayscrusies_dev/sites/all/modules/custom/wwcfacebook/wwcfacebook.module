<?php

/**
 * Implements hook_menu().
 */
require 'facebook/src/facebook.php';
require_once("twitteroauth-master/twitteroauth/twitteroauth.php"); //Path to twitteroauth library
// require_once('twitteroauth-master/config.php');

function wwcfacebook_menu() {
    $items = array();
    $items['wwcfacebook'] = array(
        'title' => 'Facebook API',
        'page callback' => 'wwcfacebook_page',
        'access callback' => 'user_access',
        'access arguments' => array('access content'),
    );


    //twitter OAuth
    $items['wwctwitteraouth'] = array(
        'title' => 'Twitter OAuth',
        'page callback' => 'wwctwitteroauth_page',
        'access callback' => 'user_access',
        'access arguments' => array('access content'),
    );


    $items['wwctwitteraouthcallback'] = array(
        'title' => 'Twitter OAuth Callback',
        'page callback' => 'wwctwitteroauthcallback_page',
        'access callback' => 'user_access',
        'access arguments' => array('access content'),
    );

    return $items;
}

function wwctwitteroauthcallback_page() {
    session_start();

    
    global $base_url;
    $twitterappcontent = app_exits_check('twitter');

    foreach ($twitterappcontent as $contenttwitter) {
        $content = $contenttwitter->data;
    }
    $resp = unserialize($content);
    $consumerkey = $resp->twitterconsumerkey;
    $consumersecret = $resp->twittersecretkey;
    
    
    
//    $connection = new TwitterOAuth(CONSUMER_KEY, CONSUMER_SECRET, $_SESSION['oauth_token'], $_SESSION['oauth_token_secret']);
    $connection = new TwitterOAuth($consumerkey, $consumersecret, $_SESSION['oauth_token'], $_SESSION['oauth_token_secret']);

    /* Request access tokens from twitter */
    $access_token = $connection->getAccessToken($_REQUEST['oauth_verifier']);
    $_SESSION['$access_token'] = $access_token;
//    $connection = new TwitterOAuth(CONSUMER_KEY, CONSUMER_SECRET, $access_token['oauth_token'], $access_token['oauth_token_secret']);
    $connection = new TwitterOAuth($consumerkey, $consumersecret, $access_token['oauth_token'], $access_token['oauth_token_secret']);

    /* If method is set change API call made. Test is called by default. */
    $content = $connection->get('account/verify_credentials');

    /* Save the access tokens. Normally these would be saved in a database for future use. */
    variable_set('twttername', $content->name);
    $blogid = $_SESSION['blogid'];
    $year = $_SESSION['year'];
    $month = $_SESSION['month'];
    global $base_url;
//$path=$base_url.'/connectblog/blogid/'.$blogid;
    if (isset($_SESSION['blogid'])) {
        $path = $base_url . '/connectblog/blogid/' . $blogid;
    } else {
        if (isset($_SESSION['year']) && $_SESSION['month']) {

            $path = $base_url . '/connectblog/year/' . $year . '/month/' . $month;
        }
    }
//$path = base_path().'connectblog';
    drupal_goto($path);
    unset($_SESSION['blogid']);
}

function wwctwitteroauth_page() {
    //Implementation twitter oauth 
    /* Get user access tokens out of the session. */

    /* Build TwitterOAuth object with client credentials. */
    global $base_url;
    $twitterappcontent = app_exits_check('twitter');

    foreach ($twitterappcontent as $contenttwitter) {
        $content = $contenttwitter->data;
    }
    $resp = unserialize($content);
    $consumerkey = $resp->twitterconsumerkey;
    $consumersecret = $resp->twittersecretkey;
    $connection = new TwitterOAuth($consumerkey, $consumersecret);
    /* Get temporary credentials. */
    $request_token = $connection->getRequestToken($base_url . '/wwctwitteraouthcallback');
    
    
    
//$connection = new TwitterOAuth(CONSUMER_KEY, CONSUMER_SECRET);
// /* Get temporary credentials. */
//$request_token = $connection->getRequestToken(OAUTH_CALLBACK);
    /* Save temporary credentials to session. */
    session_start();
    $_SESSION['oauth_token'] = $token = $request_token['oauth_token'];
    $_SESSION['oauth_token_secret'] = $request_token['oauth_token_secret'];

    /* If last connection failed don't display authorization link. */
    switch ($connection->http_code) {
        case 200:
            /* Build authorize URL and redirect user to Twitter. */
            $url = $connection->getAuthorizeURL($token);
            echo "<script type='text/javascript'>
  
  window.location.href='" . $url . "';
</script>";
//    header('Location: ' . $url); 
            break;
        default:
            /* Show notification if something went wrong. */
            echo 'Could not connect to Twitter. Refresh the page or try again later.';
    }
}

/**
 * Service which is using for checking the provided username existence
 * checking the provided username with in the user entity
 * @param type $username username column filed in the drupal core user table
 * @return json Object true /false
 * @see user_existence 
 * 
 * 
 * 
 * Simple to use
 * */
function getConnectionWithAccessToken($cons_key, $cons_secret, $oauth_token, $oauth_token_secret) {
    $connection = new TwitterOAuth($cons_key, $cons_secret, $oauth_token, $oauth_token_secret);
    return $connection;
}

function wwcfacebook_page() {
    
}

function getFacebookfeeds() {
    // Create our Application instance (replace this with your appId and secret).
    $facebook = new Facebook(array(
        'appId' => '180370205331284',
        'secret' => '7a133aa9aa4c8769ad117f776ebdf401',
    ));

// Get User ID
    $user = $facebook->getUser();

    $pageFeed = $facebook->api('waterwayscruises' . '/feed');

//var_dump($pageFeed['data']);

    $pagehtml = '';
    $i = 0;
    foreach ($pageFeed['data'] as $facebookfeeds) {
//  var_dump($facebookfeeds['from']);  
//  var_dump($facebookfeeds['name']);
        if ($i < 3) {
            if ($i == 0) {
                $pagehtml.='<div class="item active"><a href="https://facebook.com/waterwayscruises" target="_blank">' . $facebookfeeds['message'] . '</a></div>';
            } else {
                $pagehtml.='<div class="item"><a href="https://facebook.com/waterwayscruises" target="_blank">' . $facebookfeeds['message'] . '</a></div>';
            }
        }
        $i++;
    }
    return $pagehtml;
}

/* * *
 * Getting Twitter tweets
 * 
 * 
 * 
 */

function getWWCTweets() {

    $twitteruser = "waterwayscruise";
    $notweets = 50;
    $consumerkey = "dhJtn5YLJGtl6vy798NQw";
    $consumersecret = "UB65eNkSScfORJVZURaGwLMnGoFZ6x8hxt3bxNVT4M";
    $accesstoken = "1168223072-S9YYOi2jzij6umuWCKrkmxX2GFjlV5RKq4k0zOK";
    $accesstokensecret = "ZzVHpsljfAXlb1bEHTO1bGWVGzoaxrI3gb2wXdBeXJk";
    $connection = getConnectionWithAccessToken($consumerkey, $consumersecret, $accesstoken, $accesstokensecret);
    $tweets = $connection->get("https://api.twitter.com/1.1/statuses/user_timeline.json?screen_name=" . $twitteruser . "&count=" . $notweets . "&result_type=mixed");
    $pagehtml = '';
    $i = 0;
    foreach ($tweets as $tweettext) {
        if ($tweettext->retweeted_status == null) {
            if ($i < 3) {
                if ($i == 0) {
                    $pagehtml.='<div class="item active"><a href="https://twitter.com/waterwayscruise" target="_blank">' . $tweettext->text . '</a></div>';
                } else {
                    $pagehtml.='<div class="item"><a href="https://twitter.com/waterwayscruise" target="_blank">' . $tweettext->text . '</a></div>';
                }
            }
            $i++;
        }
    }

    $j = 0;
    $usertwietspagehtml = '';
    foreach ($tweets as $usertweettext) {
        if ($usertweettext->retweeted_status != null) {
            if ($j < 3) {
                if ($j == 0) {
                    $usertwietspagehtml.='<div class="item active"><a href="https://twitter.com/waterwayscruise" target="_blank">' . $usertweettext->text . '</a></div>';
                } else {
                    $usertwietspagehtml.='<div class="item"><a href="https://twitter.com/waterwayscruise" target="_blank">' . $usertweettext->text . '</a></div>';
                }
            }
            $j++;
        }
    }

    $results = array('yourtweets' => $usertwietspagehtml, 'ourtweets' => $pagehtml);
    return $results;
}

function latestYoutubevideo() {
        
    $youtubeapiurl = 'https://gdata.youtube.com/feeds/api/videos?author=waterwayscruises&alt=json';
    $youtapijsonResults = file_get_contents($youtubeapiurl);
    $youtubedecodeResults = json_decode($youtapijsonResults);
    $youtubevideoshtml = '';
    //Entry Items list array of Objects
    foreach ($youtubedecodeResults->feed->entry as $youdetails) {
        $title = '$t';
        $videotitle = $youdetails->title->$title;
//    
        $t = 'media$group';
        $mediades = 'media$description';
        $player = 'media$player';
        $thumlnailimg = 'media$thumbnail';
//    var_dump($youdetails->$t->$mediades);
//     var_dump($youdetails->$t->$player);
        foreach ($youdetails->$t->$player as $vid) {
            $videourl = $vid->url;
        }

        foreach ($youdetails->$t->$thumlnailimg as $thumnails) {
//      var_dump($thumnails->url);
            $youtubevideoshtml.='<img src="' . $thumnails->url . '" width="60" height="60" /><span class="socialWidgetTitle">youtube</span>';
            $youtubevideoshtml.='<span><a href="' . $videourl . '" target="_blank">' . $videotitle . '</a></span>';

            break;
        }
    }
    return $youtubevideoshtml;
}
