<?php

function emailtemplate_notification_cron(){
	EmailTemplateNotification::sendNotificationData();
}

function emailtemplate_notification_menu() {
	
	$items=array();
	$items['emailtemplate-notification-status'] = array(
		'title' => 'Email Template Notification',
		'page callback' => 'emailtemplates_notificaton_status_page',
		'access arguments' => array('view email template notification status'),
		'file'=>'inc/emailtemplatenotificationstatus.inc'
	);
	return $items;
}




function emailtemplate_notification_permission() {
	return array (
			'view email template notification status' => array (
					'title' => t ( 'View Email Template Notification Status' ),
			),
	);
}

class EmailTemplateNotification{
	
	public $user_id;
	public $cruise_template_id;
	public $schedule_event_id;
	public $schedule_event_date;
	public $order_id;

	
	public static function getEmailTemplateId($cruiseTemplateId){
		try{
			//Getting
			$query = db_select('cruise_event_emailtemplates', 'c');
			$query->fields('c');
			$query->condition('cruise_templateid', $cruiseTemplateId, '=');
			$result = $query->execute()->fetchAll();
				
		}catch(Exception $e){
				
		}
		
		return $result;

	}
	
	public function emailNotification(){
		try {
			$id = db_insert ( 'emailtemplate_notification' )->fields ( array (
					'user_id' => $this->user_id,
					'cruise_template_id' => $this->cruise_template_id,
					'schedule_event_id' => $this->schedule_event_id,
					'schedule_event_date' => $this->schedule_event_date,
					'order_id'=>$this->order_id,
			) )->execute ();
		} catch ( Exception $e ) {
		}
	}
	
	
	public static function sendNotificationData(){
		$todayDate=time();
		
		$todayMDY= date('m/d/Y',$todayDate);
		$todayMDYStartTime=strtotime($todayMDY . " 00:00:00");
		$todayMDYEndTime=strtotime($todayMDY . " 23:59:59");
		
		
		//*********************   72 Hours Prior ****************************
		$hours72TimeStamp=strtotime("+72 hours",$todayMDYStartTime);
		$hours72StartTime=strtotime(date('m/d/Y',$hours72TimeStamp) . "00:00:00");
		$hours72EndTime=strtotime(date('m/d/Y',$hours72TimeStamp) . "23:59:59");
		try{
			$hours72result = db_select('emailtemplate_notification', 'e')
			->fields('e')
			->condition('schedule_event_date', $hours72StartTime, '>=')
			->condition('schedule_event_date', $hours72EndTime, '<=')
			->execute()->fetchAll();
		}catch(Exception $e){
		}
		
		$from=SiteConfiguration::getConfirmationEmail();
		foreach($hours72result as $data){
			$enid=$data->id;
			$user_id=$data->user_id;
			$cruise_template_id=$data->cruise_template_id;
			$schedule_event_id=$data->schedule_event_id;
			$schedule_event_date=$data->schedule_event_date;
			$order_id=$data->order_id;

			$emailTemplateID=EmailTemplateNotification::getEmailTemplateIdByCruiseNPeriod($cruise_template_id,'72','prior');
			if(isset($emailTemplateID)){
			$emailtemplateData = emailtemplates_load_by_id($emailTemplateID);
			$emailSubject=$emailtemplateData[$emailTemplateID]->subject;
			$emailbody=$emailtemplateData[$emailTemplateID]->mail_body;
			$userAccount=user_load($user_id);
			
			$customerEmail=$userAccount->mail;
			
			//$from = variable_get('site_mail', ini_get('sendmail_from'));
			$params = array(
					'emailsubject' => $emailSubject,
					'emailbody' =>$emailbody,
			);
			$to = $customerEmail;
			$mailres=drupal_mail("email_system", "email_template_notification", $to, language_default(), $params, $from);
			
			if ($mailres ['send']) {
				EmailTemplateNotification::logEmailNotificationStatus($enid, time(), "success");
			} else {
				EmailTemplateNotification::logEmailNotificationStatus($enid, time(), "failed");
			}
			}
		}
		
	
		
		//*********************   24 Hours Prior ****************************
		$hours24TimeStamp=strtotime("+24 hours",$todayMDYStartTime);
		$hours24StartTime=strtotime(date('m/d/Y',$hours24TimeStamp) . "00:00:00");
		$hours24EndTime=strtotime(date('m/d/Y',$hours24TimeStamp) . "23:59:59");
		try{
			$hours24result = db_select('emailtemplate_notification', 'e')
			->fields('e')
			->condition('schedule_event_date', $hours24StartTime, '>=')
			->condition('schedule_event_date', $hours24EndTime, '<=')
			->execute()->fetchAll();
		}catch(Exception $e){
	    }
		
		foreach($hours24result as $data){
			$enid=$data->id;
			$user_id=$data->user_id;
			$cruise_template_id=$data->cruise_template_id;
			$schedule_event_id=$data->schedule_event_id;
			$schedule_event_date=$data->schedule_event_date;
			$order_id=$data->order_id;
		
			$emailTemplateID=EmailTemplateNotification::getEmailTemplateIdByCruiseNPeriod($cruise_template_id,'24','prior');
			if(isset($emailTemplateID)){
			$emailtemplateData = emailtemplates_load_by_id($emailTemplateID);
			$emailSubject=$emailtemplateData[$emailTemplateID]->subject;
			$emailbody=$emailtemplateData[$emailTemplateID]->mail_body;
			$userAccount=user_load($user_id);
				
			$customerEmail=$userAccount->mail;
			$from = variable_get('site_mail', ini_get('sendmail_from'));
			$params = array(
					'emailsubject' => $emailSubject,
					'emailbody' =>$emailbody,
			);
			$to = $customerEmail;
			$mailres=drupal_mail("email_system", "email_template_notification", $to, language_default(), $params, $from);
			if ($mailres ['send']) {
				EmailTemplateNotification::logEmailNotificationStatus($enid, time(), "success");
			} else {
				EmailTemplateNotification::logEmailNotificationStatus($enid, time(), "failed");
			}
			}
		}
		
		
		
		
		//*********************   -24 Hours Post ****************************
		$hours24NegTimeStamp=strtotime("-24 hours",$todayMDYStartTime);
		$hours24NegStartTime=strtotime(date('m/d/Y',$hours24NegTimeStamp) . "00:00:00");
		$hours24NegEndTime=strtotime(date('m/d/Y',$hours24NegTimeStamp) . "23:59:59");
		try{
			$hours24Negresult = db_select('emailtemplate_notification', 'e')
			->fields('e')
			->condition('schedule_event_date', $hours24NegStartTime, '>=')
			->condition('schedule_event_date', $hours24NegEndTime, '<=')
			->execute()->fetchAll();
		}catch(Exception $e){
		
		}
		
		foreach($hours24Negresult as $data){
			$enid=$data->id;
			$user_id=$data->user_id;
			$cruise_template_id=$data->cruise_template_id;
			$schedule_event_id=$data->schedule_event_id;
			$schedule_event_date=$data->schedule_event_date;
			$order_id=$data->order_id;
		
			$emailTemplateID=EmailTemplateNotification::getEmailTemplateIdByCruiseNPeriod($cruise_template_id,'24','post');
			if(isset($emailTemplateID)){
				$emailtemplateData = emailtemplates_load_by_id($emailTemplateID);
				$emailSubject=$emailtemplateData[$emailTemplateID]->subject;
				$emailbody=$emailtemplateData[$emailTemplateID]->mail_body;
				$userAccount=user_load($user_id);
				
				$customerEmail=$userAccount->mail;
				$from = variable_get('site_mail', ini_get('sendmail_from'));
				$params = array(
						'emailsubject' => $emailSubject,
						'emailbody' =>$emailbody,
				);
				$to = $customerEmail;
				$mailres=drupal_mail("email_system", "email_template_notification", $to, language_default(), $params, $from);
				if ($mailres ['send']) {
					EmailTemplateNotification::logEmailNotificationStatus($enid, time(), "success");
				} else {
					EmailTemplateNotification::logEmailNotificationStatus($enid, time(), "failed");
				}
				
			}
		
		}
		
	
		
	}
	
	
	public static function getEmailTemplateIdByCruiseNPeriod($cruise_templateid,$period,$type){
		try{
			$result = db_select('cruise_event_emailtemplates', 'cet')
			->fields('cet',array('templateid'))
			->condition('cruise_templateid', $cruise_templateid, '=')
			->condition('period', $period, '=')
			->condition('type', $type, '=')
			->execute()->fetchField();
			
			return $result;
			
		}catch(Exception $e){
			watchdog("Email Notificaiton", $e);
		}
		
	}
		
		
	public static function logEmailNotificationStatus($en_id,$sent_date,$status){
		try{
			$id = db_insert('emailtemplate_notifications_sent')
			->fields(array(
					'en_id' => $en_id,
					'sent_date' => $sent_date,
					'status' => $status,
			))
			->execute();
			
		}catch(Exception $e){
			watchdog("Logging Email Notificaiton", $e);
		}
		
	}
}